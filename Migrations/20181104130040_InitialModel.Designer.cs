// <auto-generated />
using System;
using HeritageApp.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HeritageApp.Migrations
{
    [DbContext(typeof(HeritageContext))]
    [Migration("20181104130040_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HeritageApp.Models.Database.ActivationMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivationModeDescription");

                    b.Property<string>("ActivationModeName");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("CreatedUserId");

                    b.Property<double>("LowerBound");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<int>("ModifiedUserId");

                    b.Property<double>("UpperBound");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ModifiedUserId");

                    b.ToTable("ActivationModes");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.EvaluationOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Option");

                    b.HasKey("Id");

                    b.ToTable("EvaluationOptions");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.EvaluatorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("EvaluatorTypes");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FileName")
                        .HasMaxLength(50);

                    b.Property<string>("FilePath");

                    b.Property<int>("HeritageId");

                    b.Property<int>("UploadUserId");

                    b.HasKey("Id");

                    b.HasIndex("HeritageId");

                    b.HasIndex("UploadUserId");

                    b.ToTable("FileUploads");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.Heritage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ActivationModeId");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("CreatedUserId");

                    b.Property<string>("CurrentStatus");

                    b.Property<string>("EndangeredStatus");

                    b.Property<double?>("EvaluationValue");

                    b.Property<int?>("HeritageGameAnalysisId");

                    b.Property<string>("History");

                    b.Property<string>("Inheritors");

                    b.Property<string>("Masterpiece");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<int>("ModifiedUserId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<double>("PresentValue");

                    b.Property<string>("ProjectOverview");

                    b.Property<string>("Province")
                        .HasMaxLength(50);

                    b.Property<string>("RegistrationDistrict");

                    b.Property<string>("RegistrationYear")
                        .HasMaxLength(4);

                    b.Property<string>("Story");

                    b.Property<double>("TourismBenefit");

                    b.Property<string>("TourismDevelopmentModel");

                    b.Property<string>("TourismMarketCharacteristics");

                    b.Property<double>("TourismPrice");

                    b.Property<string>("TourismProduct");

                    b.Property<string>("TourismStatus");

                    b.Property<string>("TypeofProject");

                    b.HasKey("Id");

                    b.HasIndex("ActivationModeId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("HeritageGameAnalysisId");

                    b.HasIndex("ModifiedUserId");

                    b.ToTable("Heritages");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.HeritageComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CommentDate");

                    b.Property<string>("CommentText");

                    b.Property<int>("CommentUserId");

                    b.Property<int>("DownVoteCount");

                    b.Property<int>("HeritageId");

                    b.Property<int>("UpVoteCount");

                    b.HasKey("Id");

                    b.HasIndex("CommentUserId");

                    b.HasIndex("HeritageId");

                    b.ToTable("HeritageComments");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.HeritageEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("AgreementFactor");

                    b.Property<int>("ArtValue");

                    b.Property<int>("BasicResourceDevelopmentValue");

                    b.Property<int>("BasicResourceValue");

                    b.Property<double>("CognitionFactor");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("CreatedUserId");

                    b.Property<int>("CultureValue");

                    b.Property<int>("EcologicalEnvironmentValue");

                    b.Property<int>("EcologyValue");

                    b.Property<int>("EconomyValue");

                    b.Property<int>("EducationValue");

                    b.Property<double>("EvaluationValue");

                    b.Property<int>("EvaluatorTypeId");

                    b.Property<int>("GovProtectionValue");

                    b.Property<int>("HeritageId");

                    b.Property<int>("HistoryValue");

                    b.Property<int>("ImportanceValue");

                    b.Property<int>("IntroductionProbabilityValue");

                    b.Property<int>("MarketStatusValue");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<int>("ModifiedUserId");

                    b.Property<int>("NationalEcomonicValue");

                    b.Property<int>("NationalPrideValue");

                    b.Property<int>("PersonalityValue");

                    b.Property<int>("PopularValue");

                    b.Property<double>("ProjectBasicInfoFactor");

                    b.Property<double>("ProjectConditionStatusFactor");

                    b.Property<double>("ProjectValueFactor");

                    b.Property<int>("QualityValue");

                    b.Property<int>("RarenessValue");

                    b.Property<int>("ResourceCharacteristicsValue");

                    b.Property<int>("ScienceValue");

                    b.Property<int>("SkillInheritanceDifficultyValue");

                    b.Property<int>("SkillInheritanceMethodValue");

                    b.Property<int>("SkillScopeValue");

                    b.Property<int>("SocietyValue");

                    b.Property<int>("TimeSpanValue");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("HeritageId");

                    b.HasIndex("ModifiedUserId");

                    b.ToTable("HeritageEvaluations");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.HeritageGameAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Ai1");

                    b.Property<double>("Ai2");

                    b.Property<double>("Ai3");

                    b.Property<double>("Ai4");

                    b.Property<double>("Aij");

                    b.Property<double>("CiA");

                    b.Property<double>("CiB");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int>("CreatedUserId");

                    b.Property<int>("HeritageId");

                    b.Property<double>("Ii");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<int>("ModifiedUserId");

                    b.Property<double>("PiA");

                    b.Property<double>("PiB");

                    b.Property<string>("Route1");

                    b.Property<string>("Route10");

                    b.Property<string>("Route11");

                    b.Property<string>("Route12");

                    b.Property<string>("Route13");

                    b.Property<string>("Route14");

                    b.Property<string>("Route15");

                    b.Property<string>("Route16");

                    b.Property<string>("Route17");

                    b.Property<string>("Route18");

                    b.Property<string>("Route19");

                    b.Property<string>("Route2");

                    b.Property<string>("Route20");

                    b.Property<string>("Route21");

                    b.Property<string>("Route22");

                    b.Property<string>("Route23");

                    b.Property<string>("Route24");

                    b.Property<string>("Route3");

                    b.Property<string>("Route4");

                    b.Property<string>("Route5");

                    b.Property<string>("Route6");

                    b.Property<string>("Route7");

                    b.Property<string>("Route8");

                    b.Property<string>("Route9");

                    b.Property<double>("Vi1");

                    b.Property<double>("Vi3A");

                    b.Property<double>("Vi3B");

                    b.Property<double>("Vi4A");

                    b.Property<double>("Vi4B");

                    b.Property<double>("Vi5A");

                    b.Property<double>("Vi5B");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ModifiedUserId");

                    b.ToTable("HeritageGameAnalyses");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanComment");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsContributer");

                    b.Property<bool>("IsReadOnly");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HeritageApp.Models.Database.ActivationMode", b =>
                {
                    b.HasOne("HeritageApp.Models.Database.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HeritageApp.Models.Database.User", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HeritageApp.Models.Database.FileUpload", b =>
                {
                    b.HasOne("HeritageApp.Models.Database.Heritage")
                        .WithMany("FileUploads")
                        .HasForeignKey("HeritageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HeritageApp.Models.Database.User", "UploadUser")
                        .WithMany("UploadFile")
                        .HasForeignKey("UploadUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HeritageApp.Models.Database.Heritage", b =>
                {
                    b.HasOne("HeritageApp.Models.Database.ActivationMode", "ActivationMode")
                        .WithMany()
                        .HasForeignKey("ActivationModeId");

                    b.HasOne("HeritageApp.Models.Database.User", "CreatedUser")
                        .WithMany("CreatedHeritage")
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HeritageApp.Models.Database.HeritageGameAnalysis", "HeritageGameAnalysis")
                        .WithMany()
                        .HasForeignKey("HeritageGameAnalysisId");

                    b.HasOne("HeritageApp.Models.Database.User", "ModifiedUser")
                        .WithMany("ModifiedHeritage")
                        .HasForeignKey("ModifiedUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HeritageApp.Models.Database.HeritageComment", b =>
                {
                    b.HasOne("HeritageApp.Models.Database.User", "CommentUser")
                        .WithMany("CreatedComment")
                        .HasForeignKey("CommentUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HeritageApp.Models.Database.Heritage")
                        .WithMany("HeritageComments")
                        .HasForeignKey("HeritageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HeritageApp.Models.Database.HeritageEvaluation", b =>
                {
                    b.HasOne("HeritageApp.Models.Database.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HeritageApp.Models.Database.Heritage")
                        .WithMany("HeritageEvaluations")
                        .HasForeignKey("HeritageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HeritageApp.Models.Database.User", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HeritageApp.Models.Database.HeritageGameAnalysis", b =>
                {
                    b.HasOne("HeritageApp.Models.Database.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HeritageApp.Models.Database.User", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
